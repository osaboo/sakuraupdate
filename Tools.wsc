<?xml version="1.0" encoding="utf-8"?>
<component>
    <public>
        <property name="Editor"/>
        <property name="Plugin"/>
        <property name="DebugLvl"/>
        <method name="YYYYMMDD">
                <PARAMETER name="aDT"/>
        </method>
        <method name="HHNNSS">
                <PARAMETER name="aDT"/>
        </method>
        <method name="IsExistFile">
                <PARAMETER name="afile"/>
        </method>
        <method name="IsExistDir">
                <PARAMETER name="adir"/>
        </method>
        <method name="CreateDir">
                <PARAMETER name="fs"/>
                <PARAMETER name="adir"/>
        </method>
        <method name="DeleteDir">
                <PARAMETER name="fs"/>
                <PARAMETER name="adir"/>
        </method>
        <method name="DoCmd">
                <PARAMETER name="acmd"/>
                <PARAMETER name="aenc"/>
        </method>
        <method name="GetFileEncode">
                <PARAMETER name="afile"/>
        </method>
        <method name="ParseJson">
                <PARAMETER name="strJson"/>
        </method>
        <method name="LoadText">
                <PARAMETER name="afile"/>
                <PARAMETER name="aenc"/>
        </method>
        <method name="SaveText">
                <PARAMETER name="atext"/>
                <PARAMETER name="afile"/>
                <PARAMETER name="aenc"/>
        </method>
        <method name="CreateHttpRequest">
        </method>
        <method name="GetOSInfo">
                <PARAMETER name="aos"/>
                <PARAMETER name="aver"/>
                <PARAMETER name="abit"/>
        </method>
    </public>
<script language="VBScript">
<![CDATA[
Option Explicit

Dim Editor
Dim Plugin
Dim DebugLvl

dim WorkDir
dim WorkId

'Dim vbCrLf '= Chr(13) & Chr(10)
'Dim vbLf '= Chr(10)

Function IsExistFile(afile)
  Dim fs
  Set fs = CreateObject("Scripting.FileSystemObject")
  IsExistFile = fs.FileExists(afile)
  Set fs = Nothing
End Function

Function IsExistDir(adir)
  Dim fs
  Set fs = CreateObject("Scripting.FileSystemObject")
  IsExistDir = fs.FolderExists(adir)
  set fs = Nothing
End Function

Function CreateDir(fs, adir)
  on error resume next

  err.clear
  fs.CreateFolder adir
  If err.number <> 0 then
    Editor.ErrorMsg(adir & "フォルダを作成できませんでした。")
  End if
End Function

Function DeleteDir(fs, adir)
  on error resume next
  
  err.clear
  fs.DeleteFolder adir
  If err.number <> 0 then
     Editor.ErrorMsg(adir & "フォルダを削除できませんでした。")
  End if
End Function

'    日付変換
Function YYYYMMDD(aDT)
    on error resume next
    YYYYMMDD  = "00000000"
    If isDate(aDT) Then
        YYYYMMDD = Right("0000"& Year(aDT), 4) & Right("00" & Month(aDT), 2) & Right("00" & Day(aDT), 2)
    End If
End Function

'   時刻変換
Function HHNNSS(aDT)
    on error resume next
    HHNNSS = "000000"
    HHNNSS = Right("00" & Hour(aDT), 2) & Right("00" & Minute(aDT), 2) & Right("00" & Second(aDT), 2)
End Function

Function DoCmd(acmd, aenc)
  Dim oSH
  Dim oEX
  Dim wbuff
  Dim wconout
  Dim wlogfile
  
  Set oSH = CreateObject("Wscript.Shell")
  
  if aenc <> "" Then
    wconout = oSH.ExpandEnvironmentStrings("%TEMP%") & "\conout.txt"
    acmd = "%ComSpec% /c " & acmd & " >" & wconout & " 2>&1"
  End If
  
  wbuff = vbCrLf & ">" & acmd & vbCrLf
  Editor.TraceOut(wbuff)

  'wlogfile = LogDir & "\" & LogFile
  'Call AppendText(wbuff , wlogfile, "Shift_JIS")
  
  'Set oEX = oSH.Exec("%ComSpec% /c echo " & acmd)
  'Set oEX = oSH.Exec("%ComSpec% /c " & acmd)
  Set oEX = oSH.Exec(acmd)

  Do While oEx.Status = 0
    Editor.Sleep 100
  Loop
  
  wbuff = ""
  
  If aenc <> "" Then
    wbuff = LoadText(wconout, aenc)
    Call AppendText(wbuff, wlogfile, "Shift_JIS")
  End If
  
  DoCmd = wbuff
End Function

Function GetFileEncode(afile)
  'on error resume next
  Dim wbuff
  
    Dim st
   
  '  ADODB.Streamの参照URL
  '  http://msdn.microsoft.com/ja-jp/library/cc364272.aspx
  '  http://msdn.microsoft.com/ja-jp/library/cc364273.aspx
    
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成
    
    st.Type = 1  'バイナリ

    st.Open         'Streamのオープン
    st.LoadFromFile(afile)  'ファイル読み込み
    if err.number = 0 Then
      wbuff = st.Read(-1)
      if IsNull(wbuff) Then
        wbuff = Array(0)
      End If
    Else
      wbuff = Array(0)
    End If

    st.Close  'Streamのクローズ
    Set st = Nothing
  
  GetFileEncode = "Shift_JIS"
  
  If ubound(wbuff) < 2 Then
    Exit Function
  End If
  
  Dim i
  Dim b1, b2, b3
  Dim sjis, utf8

  b1 = AscB(MidB(wbuff,1,1))
  b2 = AscB(MidB(wbuff,2,1))
  b3 = AscB(MidB(wbuff,3,1))
  
  if b1 = &HEF and b2 = &HBB and b3 = &HBF Then 'BOM
    Editor.TraceOut("BOMあり")
    GetFileEncode = "utf-8"
    'Exit Function
  End If
  
  
  sjis = 0
  
  For i = 0 to ubound(wbuff)-2
    b1 = AscB(MidB(wbuff,1+i+0,1))
    b2 = AscB(MidB(wbuff,1+i+1,1))
    if ( (&H81 <= b1 and b1 <= &H9F) or (&HE0 <= b1 and b1 <= &HFC) ) and _
       ( (&H40 <= b2 and b2 <= &H7E) or (&H80 <= b2 and b2 <= &HFC) ) Then
       sjis = sjis + 2
       i = i + 1
    End If
  Next

  utf8 = 0
  
  For i = 0 to ubound(wbuff)-2
    b1 = AscB(MidB(wbuff,1+i+0,1))
    b2 = AscB(MidB(wbuff,1+i+1,1))
    if (&HC0 <= b1 and b1 <= &HDF) and _
       (&H80 <= b2 and b2 <= &HBF) Then
       utf8 = utf8 + 2
       i = i + 1
    ElseIf i < ubound(wbuff)-2 Then
       b3 = AscB(MidB(wbuff,1+i+2,1))
       if (&HE0 <= b1 and b1 <= &HEF) and _
          (&H80 <= b2 and b2 <= &HBF) and _
          (&H80 <= b3 and b3 <= &HBF) Then
          utf8 = utf8 + 3
          i = i + 2
       End If
    End If
  Next

'  Editor.TraceOut("sjis=" & sjis & ",utf8=" & utf8)
  
  if sjis < utf8 Then
    GetFileEncode = "utf-8"
  End If

End Function

Function LoadText(afile, aenc)
  on error resume next
  Dim wbuff
  
  wbuff = ""
  
  If aenc = "" Then aenc = "Shift_JIS"
  
    'wbuff = wbuff & "----------stdout" & vbCrLf
    'Do While Not oEX.StdOut.AtEndOfStream
    '  wbuff = wbuff & oEX.StdOut.ReadLine() & vbCrLf
    'Loop
    'wbuff = wbuff & "----------stderr" & vbCrLf
    'Do While Not oEX.StdErr.AtEndOfStream
    '  wbuff = wbuff & oEX.StdErr.ReadLine() & vbCrLf
    'Loop
    'wbuff = wbuff & "----------" & vbCrLf
    
    Dim st
   
  '  ADODB.Streamの参照URL
  '  http://msdn.microsoft.com/ja-jp/library/cc364272.aspx
  '  http://msdn.microsoft.com/ja-jp/library/cc364273.aspx
    
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成
    
    st.Type = 2  'オブジェクトに保存するデータの種類を文字列型に指定する

    st.Charset = aenc '"utf-8"  '文字コード（Shift_JIS, Unicodeなど）

    st.LineSeparator = 10 '改行LF（10）
    
    st.Open         'Streamのオープン
    st.LoadFromFile(afile)  'ファイル読み込み
    if err.number = 0 Then
      wbuff = st.ReadText(-1)
    Else
      wbuff = "#ERROR#"
    End If

    st.Close  'Streamのクローズ
    Set st = Nothing
  
  LoadText = wbuff
End Function

Function SaveText(atext, apath, aenc)

  If aenc = "" Then aenc = "Shift_JIS"
  
    Dim st
   
  '  ADODB.Streamの参照URL
  '  http://msdn.microsoft.com/ja-jp/library/cc364272.aspx
  '  http://msdn.microsoft.com/ja-jp/library/cc364273.aspx
    
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成
    
    st.Type = 2  'オブジェクトに保存するデータの種類を文字列型に指定する

    st.Charset = aenc '"utf-8"  '文字コード（Shift_JIS, Unicodeなど）

    st.LineSeparator = -1 '改行LF（10）
    
    st.Open         'Streamのオープン
    
    st.WriteText Replace(atext, vbLf, vbCrLf), 0

    st.SaveToFile apath, 2
    
    st.Close  'Streamのクローズ
    Set st = Nothing
  
  SaveText = atext
End Function

Function AppendText(atext, apath, aenc)
  Dim st

  If aenc = "" Then aenc = "Shift_JIS"
  
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成

    st.Mode = 3 '読み取り/書き込みモード
    
    st.Type = 2  'オブジェクトに保存するデータの種類を文字列型に指定する

    st.Charset = aenc '"utf-8"  '文字コード（Shift_JIS, Unicodeなど）

    st.Open         'Streamのオープン
    st.LoadFromFile apath 'ファイル読み込み
    
    st.Position = st.Size '書き込み位置を終端へ移動
    
    st.WriteText Replace(atext, vbLf, vbCrLf), 0

    st.SaveToFile apath, 2
    
    st.Close  'Streamのクローズ
    Set st = Nothing
  
  AppendText = atext
End Function

' Encode special characters of a string
' this is useful when you want to put a string in the URL
' inspired by http://stackoverflow.com/questions/218181/how-can-i-url-encode-a-string-in-excel-vba
Function URLEncode( StringVal )
    Dim sc
    Set sc = CreateObject("ScriptControl")
    sc.Language = "JScript"
    Dim js
    Set js = sc.CodeObject
    Dim strEncodeURL
    URLEncode = js.encodeURI(StringVal)
    URLEncode = Replace(URLEncode, "(", "%28")
    URLEncode = Replace(URLEncode, ")", "%29")
End Function

' JSONの読み込み
' @see https://o10e.org/blog/how-to-parse-json-for-vbscript/
Function ParseJson(ByVal strJson)
  Dim objJs

  Set objJs = CreateObject("ScriptControl")
  objJs.Language = "JScript"
  objJs.AddCode "function jsonParse(str) { return eval('(' + str + ')'); };"

  Set ParseJson = objJs.CodeObject.jsonParse(strJson)
End Function

Function FindApp(app)
    Dim oXL
    on error resume next
    
    set FindApp = Nothing

'    Dim oWD 'As Word.Application
'    Dim task 'As Word.task
    
'    Set oWD = CreateObject("Word.Application")
    
'    oWD.Visible = True
'    For Each task In oWD.Tasks
'        If InStr(task.Name, app) > 0 Then
'            'task.WindowState = wdWindowStateNormal
'            'task.Activate
'        End If
'        'Debug.Print task.Parent
'    Next

'    Dim Locator
'    Dim Server
'    Dim oSet
'    Dim o
'
'    Set Locator = CreateObject("WbemScripting.SWbemLocator")
'    Set Server = Locator.ConnectServer
'    Set oSet = Server.ExecQuery("Select * From Win32_Process")
'
'    For Each o In oSet
'        Debug.Print o.Caption
'        If o.Caption = app Then
'             Stop
'        End If
'    Next

End Function

'WinHttpRequest/XMLHTTPRequestオブジェクト作成
'http://www.f3.dion.ne.jp/~element/msaccess/AcTipsWinHTTP1.html 参考
' @see https://www.ka-net.org/blog/?p=4855#HttpRequest
Function CreateHttpRequest() ' As Object
  Dim progIDs ' As Variant
  Dim ret 'As Object
  Dim i 'As Long
   
  Set ret = Nothing '初期化
  progIDs = Array("MSXML.XMLHTTPRequest", _
                  "WinHttp.WinHttpRequest.5.1", _
                  "WinHttp.WinHttpRequest.5", _
                  "WinHttp.WinHttpRequest", _
                  "Msxml2.ServerXMLHTTP.6.0", _
                  "Msxml2.ServerXMLHTTP.5.0", _
                  "Msxml2.ServerXMLHTTP.4.0", _
                  "Msxml2.ServerXMLHTTP.3.0", _
                  "Msxml2.ServerXMLHTTP", _
                  "Microsoft.ServerXMLHTTP", _
                  "Msxml2.XMLHTTP.6.0", _
                  "Msxml2.XMLHTTP.5.0", _
                  "Msxml2.XMLHTTP.4.0", _
                  "Msxml2.XMLHTTP.3.0", _
                  "Msxml2.XMLHTTP", _
                  "Microsoft.XMLHTTP")
  progIDs = Array( "Msxml2.XMLHTTP")
  On Error Resume Next
  For i = LBound(progIDs) To UBound(progIDs)
    Set ret = CreateObject(progIDs(i))
    If Not ret Is Nothing Then
    	If DebugLvl > 1 Then Editor.TraceOut "XMLHTTPRequestを" & progIDs(i) & "で初期化しました。"
    	Exit For
    End If
  Next
  On Error GoTo 0
  If ret is Nothing Then
  	If DebugLvl > 1 Then Editor.TraceOut "XMLHTTPRequestを初期化できませんでした。"
  End If
  Set CreateHttpRequest = ret
End Function

Function GetOSInfo(ByRef aos, ByRef aver, ByRef abit)
  Dim objWMIService
  Dim colItems
  Dim item

  Set objWMIService = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2")
  Set colItems = objWMIService.ExecQuery("Select * from Win32_OperatingSystem")
  
  For Each item In colItems
      aos  = item.Caption
      aver = item.Version
      abit = item.OSArchitecture
  Next
End Function

]]>
</script>
</component>
