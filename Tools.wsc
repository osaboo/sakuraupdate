<?xml version="1.0" encoding="utf-8"?>
<component>
    <public>
        <property name="Editor"/>
        <property name="Plugin"/>
        <property name="DebugLvl"/>
        <property name="Version"/>
        <property name="FS"/>
        <property name="WSH"/>
        <property name="CurlExe"/>
        <property name="UnzipExe"/>
        <property name="WorkDir"/>
        <property name="PluginDir"/>
        <property name="SakuraDir"/>
        <method name="Init" />

        <method name="UpdateCheck">
                <PARAMETER name="amode"/>
        </method>

        <method name="SakuraCheck">
            <PARAMETER name="amode"/>
            <PARAMETER name="aver"/>
            <PARAMETER name="aurl"/>
        </method>
        <method name="SakuraDownload">
            <PARAMETER name="wurl"/>
        </method>

        <method name="HelpCheck">
            <PARAMETER name="amode"/>
            <PARAMETER name="apath"/>
            <PARAMETER name="aver"/>
            <PARAMETER name="aurl"/>
        </method>
        <method name="HelpDownload">
            <PARAMETER name="atarget"/>
            <PARAMETER name="wurl"/>
        </method>

        <method name="RegExpCheck">
            <PARAMETER name="amode"/>
            <PARAMETER name="aver"/>
            <PARAMETER name="aurl"/>
        </method>
        <method name="RegExpDownload">
            <PARAMETER name="wurl"/>
        </method>

        <method name="DiffCheck">
            <PARAMETER name="amode"/>
            <PARAMETER name="aver"/>
            <PARAMETER name="aurl"/>
        </method>
        <method name="DiffDownload">
            <PARAMETER name="wurl"/>
        </method>

        <method name="CtagsCheck">
            <PARAMETER name="amode"/>
            <PARAMETER name="aver"/>
            <PARAMETER name="aurl"/>
        </method>
        <method name="CtagsDownload">
            <PARAMETER name="wurl"/>
        </method>

        <method name="PluginCheck">
            <PARAMETER name="amode"/>
            <PARAMETER name="aver"/>
            <PARAMETER name="aurl"/>
        </method>
        <method name="PluginDownload">
            <PARAMETER name="wurl"/>
        </method>

        <method name="FileSetup">
            <PARAMETER name="atargets"/>
        </method>
        <method name="PluginSetup">
            <PARAMETER name="atarget"/>
        </method>

        <method name="log">
                <PARAMETER name="amsg"/>
                <PARAMETER name="alvl"/>
        </method>
        <method name="GetSFRSS">
                <PARAMETER name="aurl"/>
                <PARAMETER name="apath"/>
        </method>
        <method name="GetSFLink">
                <PARAMETER name="aurl"/>
        </method>
        <method name="GetGitHub">
                <PARAMETER name="aurl"/>
        </method>
        <method name="GetBitBucket">
                <PARAMETER name="aurl"/>
        </method>
        <method name="IsExistFile">
                <PARAMETER name="afile"/>
        </method>
        <method name="IsExistDir">
                <PARAMETER name="adir"/>
        </method>
        <method name="CreateDir">
                <PARAMETER name="adir"/>
        </method>
        <method name="DeleteDir">
                <PARAMETER name="adir"/>
        </method>
        <method name="DoCmd">
                <PARAMETER name="acmd"/>
        </method>
        <method name="LoadText">
                <PARAMETER name="afile"/>
                <PARAMETER name="aenc"/>
        </method>
        <method name="SaveText">
                <PARAMETER name="atext"/>
                <PARAMETER name="afile"/>
                <PARAMETER name="aenc"/>
        </method>
        <method name="CreateHttpRequest">
        </method>
        <method name="GetOSInfo"/>
    </public>
<script language="VBScript">
<![CDATA[
Option Explicit

Dim Editor
Dim Plugin
Dim DebugLvl
Dim Version

Dim WorkDir
Dim PluginDir
Dim SakuraDir

Dim CurlExe
Dim UnzipExe

Dim FS
Dim WSH

Dim OSVer
'Dim vbCrLf '= Chr(13) & Chr(10)
'Dim vbLf '= Chr(10)

' 初期化
Sub Init()
  Version = "v20181021"

  DebugLvl = Plugin.GetOption("サクラエディタ", "DEBUGLVL")

  If DebugLvl = "" Then
      Plugin.SetOption "サクラエディタ", "SITEPRIORITY","0"
      Plugin.SetOption "サクラエディタ", "SFRSSURL", "https://sourceforge.net/projects/sakura-editor/rss"
      Plugin.SetOption "サクラエディタ", "OSDNURL",  "https://osdn.net/projects/sakura-editor/releases/rss"
      Plugin.SetOption "サクラエディタ", "GITHUBURL","https://api.github.com/repos/sakura-editor/sakura/releases/latest"
      Plugin.SetOption "サクラエディタ", "HELPURL",  "https://sourceforge.net/projects/sakura-editor/rss?path=/help2"
      Plugin.SetOption "サクラエディタ", "REGEXPURL","https://api.bitbucket.org/2.0/repositories/k_takata/bregonig/downloads"
      Plugin.SetOption "サクラエディタ", "DIFFURL",  "http://www.ring.gr.jp/archives/text/TeX/ptex-win32/w32/patch-diff-w32.zip"
      Plugin.SetOption "サクラエディタ", "CTAGSURL", "http://hp.vector.co.jp/authors/VA025040/ctags/"
      Plugin.SetOption "サクラエディタ", "PLUGINURL","https://api.github.com/repos/osaboo/sakuraupdate/releases"
      Plugin.SetOption "サクラエディタ", "CHECKFREQ","7"
      Plugin.SetOption "サクラエディタ", "DEBUGLVL", "0"
      DebugLvl = 0
  End If
  
  OSVer = GetOSInfo()
  'log "osver=" & OSVer, 2

  Set FS = CreateObject("Scripting.FileSystemObject")

  PluginDir = Plugin.GetPluginDir()
  SakuraDir = FS.GetParentFolderName(Editor.ExpandParameter("$S"))

  CurlExe = """" & Plugin.GetPluginDir() & "\Curl.exe"""
    'UnzipExe = """" & Plugin.GetPluginDir() & "\Unzip.exe"""
    UnzipExe = """" & Plugin.GetPluginDir() & "\7za.exe"""
    'Editor.ActivateWinOutput

  Set WSH = CreateObject("Wscript.Shell")
  WorkDir = WSH.ExpandEnvironmentStrings("%TEMP%") & "\sakuraupdate"

  If IsExistDir(WorkDir) Then
    DeleteDir WorkDir
  End If

  'log "更新作業用フォルダ " & WorkDir, 1
  If Not IsExistDir(WorkDir) Then
    'log "更新作業用フォルダを作成します", 1
    CreateDir WorkDir
  End If

End Sub

' DebugLvl>=alvlで、amsgをTraceOutする。
Sub log(amsg, alvl)
  If DebugLvl = "" Then
    Exit Sub
  End If
  If (DebugLvl + 0) >= (alvl + 0) Then
    Editor.TraceOut amsg
  End If
End Sub

Function IsExistFile(afile)
'  Dim fs
  If FS is Nothing Then Set FS = CreateObject("Scripting.FileSystemObject")
  IsExistFile = FS.FileExists(afile)
'  Set fs = Nothing
End Function

Function IsExistDir(adir)
'  Dim fs
  If FS is Nothing Then Set FS = CreateObject("Scripting.FileSystemObject")
  IsExistDir = FS.FolderExists(adir)
'  set fs = Nothing
End Function

Function CreateDir(adir)
  On Error Resume Next
  Err.Clear

  If FS is Nothing Then Set FS = CreateObject("Scripting.FileSystemObject")
  FS.CreateFolder adir
  If Err.Number <> 0 Then
    log adir & "フォルダを作成できませんでした。", 1
  End If
End Function

Function DeleteDir(adir)
  On Error Resume Next
  Err.Clear

  If FS is Nothing Then Set FS = CreateObject("Scripting.FileSystemObject")
  FS.DeleteFolder adir, true
  If Err.Number <> 0 Then
    log adir & "フォルダを削除できませんでした。", 1
  End If
End Function

Function DeleteFile(afile)
  On Error Resume Next
  Err.Clear

  If FS is Nothing Then Set FS = CreateObject("Scripting.FileSystemObject")
  FS.DeleteFile afile, true
  If Err.Number <> 0 Then
     log afile & "を削除できませんでした。", 1
  End If
End Function

'Function DoCmd(acmd, aenc)
'  Dim oEX
'  Dim wbuff
'  Dim wconout
'  Dim wlogfile
'
'  If aenc <> "" Then
'    wconout = WSH.ExpandEnvironmentStrings("%TEMP%") & "\conout.txt"
'    acmd = "%ComSpec% /c " & acmd & " >" & wconout & " 2>&1"
'  End If
'
'  wbuff = vbCrLf & ">" & acmd & vbCrLf
'  log wbuff, 2
'
'  'wlogfile = LogDir & "\" & LogFile
'  'Call AppendText(wbuff , wlogfile, "Shift_JIS")
'
'  'Set oEX = WSH.Exec("%ComSpec% /c echo " & acmd)
'  'Set oEX = WSH.Exec("%ComSpec% /c " & acmd)
'  Set oEX = WSH.Exec(acmd)
'
'  Do While oEX.Status = 0
'    Editor.Sleep 100
'  Loop
'
'  wbuff = ""
'
'  If aenc <> "" Then
'    wbuff = LoadText(wconout, aenc)
'    Call AppendText(wbuff, wlogfile, "Shift_JIS")
'  End If
'
'  DoCmd = wbuff
'End Function

Function DoCmd(acmd)
  Dim oEX

  Set oEX = WSH.Exec(acmd)

  Do While oEX.Status = 0
on error resume next
    Editor.Sleep 100
on error goto 0
  Loop

  DoCmd = oEX.StdOut.ReadAll()
  'Do Until oEX.StdOut.AtEndOfStream
  '   aout = aout & oEX.StdOut.ReadLine() &vbCrLf
  'Loop
  
  'DoCmd = oEX.ExitCode
End Function

Function GetFileEncode(afile)
  'on error resume next
  Dim wbuff
  
    Dim st
   
  '  ADODB.Streamの参照URL
  '  http://msdn.microsoft.com/ja-jp/library/cc364272.aspx
  '  http://msdn.microsoft.com/ja-jp/library/cc364273.aspx
    
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成
    
    st.Type = 1  'バイナリ

    st.Open         'Streamのオープン
    st.LoadFromFile (afile) 'ファイル読み込み
    If Err.Number = 0 Then
      wbuff = st.Read(-1)
      If IsNull(wbuff) Then
        wbuff = Array(0)
      End If
    Else
      wbuff = Array(0)
    End If

    st.Close  'Streamのクローズ
    Set st = Nothing
  
  GetFileEncode = "Shift_JIS"
  
  If UBound(wbuff) < 2 Then
    Exit Function
  End If
  
  Dim i
  Dim b1, b2, b3
  Dim sjis, utf8

  b1 = AscB(MidB(wbuff, 1, 1))
  b2 = AscB(MidB(wbuff, 2, 1))
  b3 = AscB(MidB(wbuff, 3, 1))
  
  If b1 = &HEF And b2 = &HBB And b3 = &HBF Then 'BOM
    log "BOMあり", 2
    GetFileEncode = "utf-8"
    'Exit Function
  End If
  
  
  sjis = 0
  
  For i = 0 To UBound(wbuff) - 2
    b1 = AscB(MidB(wbuff, 1 + i + 0, 1))
    b2 = AscB(MidB(wbuff, 1 + i + 1, 1))
    If ((&H81 <= b1 And b1 <= &H9F) Or (&HE0 <= b1 And b1 <= &HFC)) And _
       ((&H40 <= b2 And b2 <= &H7E) Or (&H80 <= b2 And b2 <= &HFC)) Then
       sjis = sjis + 2
       i = i + 1
    End If
  Next

  utf8 = 0
  
  For i = 0 To UBound(wbuff) - 2
    b1 = AscB(MidB(wbuff, 1 + i + 0, 1))
    b2 = AscB(MidB(wbuff, 1 + i + 1, 1))
    If (&HC0 <= b1 And b1 <= &HDF) And _
       (&H80 <= b2 And b2 <= &HBF) Then
       utf8 = utf8 + 2
       i = i + 1
    ElseIf i < UBound(wbuff) - 2 Then
       b3 = AscB(MidB(wbuff, 1 + i + 2, 1))
       If (&HE0 <= b1 And b1 <= &HEF) And _
          (&H80 <= b2 And b2 <= &HBF) And _
          (&H80 <= b3 And b3 <= &HBF) Then
          utf8 = utf8 + 3
          i = i + 2
       End If
    End If
  Next

' log("sjis=" & sjis & ",utf8=" & utf8, 2)
  
  If sjis < utf8 Then
    GetFileEncode = "utf-8"
  End If

End Function

Function LoadText(afile, aenc)
  On Error Resume Next
  Dim wbuff
  
  wbuff = ""
  
  If aenc = "" Then aenc = "Shift_JIS"
  
    'wbuff = wbuff & "----------stdout" & vbCrLf
    'Do While Not oEX.StdOut.AtEndOfStream
    '  wbuff = wbuff & oEX.StdOut.ReadLine() & vbCrLf
    'Loop
    'wbuff = wbuff & "----------stderr" & vbCrLf
    'Do While Not oEX.StdErr.AtEndOfStream
    '  wbuff = wbuff & oEX.StdErr.ReadLine() & vbCrLf
    'Loop
    'wbuff = wbuff & "----------" & vbCrLf
    
    Dim st
   
  '  ADODB.Streamの参照URL
  '  http://msdn.microsoft.com/ja-jp/library/cc364272.aspx
  '  http://msdn.microsoft.com/ja-jp/library/cc364273.aspx
    
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成
    
    st.Type = 2  'オブジェクトに保存するデータの種類を文字列型に指定する

    st.Charset = aenc '"utf-8"  '文字コード（Shift_JIS, Unicodeなど）

    st.LineSeparator = 10 '改行LF（10）
    
    st.Open         'Streamのオープン
    st.LoadFromFile (afile) 'ファイル読み込み
    If Err.Number = 0 Then
      wbuff = st.ReadText(-1)
    Else
      wbuff = "#ERROR#"
    End If

    st.Close  'Streamのクローズ
    Set st = Nothing
  
  LoadText = wbuff
End Function

Function SaveText(atext, apath, aenc)

  If aenc = "" Then aenc = "Shift_JIS"
  
    Dim st
   
  '  ADODB.Streamの参照URL
  '  http://msdn.microsoft.com/ja-jp/library/cc364272.aspx
  '  http://msdn.microsoft.com/ja-jp/library/cc364273.aspx
    
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成
    
    st.Type = 2  'オブジェクトに保存するデータの種類を文字列型に指定する

    st.Charset = aenc '"utf-8"  '文字コード（Shift_JIS, Unicodeなど）

    st.LineSeparator = -1 '改行LF（10）
    
    st.Open         'Streamのオープン
    
    st.WriteText Replace(atext, vbLf, vbCrLf), 0

    st.SaveToFile apath, 2
    
    st.Close  'Streamのクローズ
    Set st = Nothing
  
  SaveText = atext
End Function

Function AppendText(atext, apath, aenc)
  Dim st

  If aenc = "" Then aenc = "Shift_JIS"
  
    Set st = CreateObject("ADODB.Stream") 'ADODB.Stream生成

    st.Mode = 3 '読み取り/書き込みモード
    
    st.Type = 2  'オブジェクトに保存するデータの種類を文字列型に指定する

    st.Charset = aenc '"utf-8"  '文字コード（Shift_JIS, Unicodeなど）

    st.Open         'Streamのオープン
    st.LoadFromFile apath 'ファイル読み込み
    
    st.Position = st.Size '書き込み位置を終端へ移動
    
    st.WriteText Replace(atext, vbLf, vbCrLf), 0

    st.SaveToFile apath, 2
    
    st.Close  'Streamのクローズ
    Set st = Nothing
  
  AppendText = atext
End Function

'WinHttpRequest/XMLHTTPRequestオブジェクト作成
'http://www.f3.dion.ne.jp/~element/msaccess/AcTipsWinHTTP1.html 参考
' @see https://www.ka-net.org/blog/?p=4855#HttpRequest
Function CreateHttpRequest() ' As Object
  Dim progIDs ' As Variant
  Dim ret 'As Object
  Dim i 'As Long
   
  Set ret = Nothing '初期化
'  progIDs = Array("MSXML.XMLHTTPRequest", _
'                  "WinHttp.WinHttpRequest.5.1", _
'                  "WinHttp.WinHttpRequest.5", _
'                  "WinHttp.WinHttpRequest", _
'                  "Msxml2.ServerXMLHTTP.6.0", _
'                  "Msxml2.ServerXMLHTTP.5.0", _
'                  "Msxml2.ServerXMLHTTP.4.0", _
'                  "Msxml2.ServerXMLHTTP.3.0", _
'                  "Msxml2.ServerXMLHTTP", _
'                  "Microsoft.ServerXMLHTTP", _
'                  "Msxml2.XMLHTTP.6.0", _
'                  "Msxml2.XMLHTTP.5.0", _
'                  "Msxml2.XMLHTTP.4.0", _
'                  "Msxml2.XMLHTTP.3.0", _
'                  "Msxml2.XMLHTTP", _
'                  "Microsoft.XMLHTTP")
  progIDs = Array("Msxml2.ServerXMLHTTP", _
                  "Msxml2.XMLHTTP")
  On Error Resume Next
  For i = LBound(progIDs) To UBound(progIDs)
    Set ret = CreateObject(progIDs(i))
    If Not ret Is Nothing Then
        log "XMLHTTPRequestを" & progIDs(i) & "で初期化しました。", 2
        Exit For
    End If
  Next
  On Error GoTo 0
  If ret Is Nothing Then
    log "XMLHTTPRequestを初期化できませんでした。", 0
  End If
  Set CreateHttpRequest = ret
End Function

Function GetOSInfo()
   Dim objLoc
   Dim objWMIService
   Dim colItems
   Dim item

   Set objLoc = CreateObject("WbemScripting.SWbemLocator")
   Set objWMIService = objLoc.ConnectServer
'   Set objWMIService = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2")
   Set colItems = objWMIService.ExecQuery("Select * from Win32_OperatingSystem")
  
   GetOSInfo = ""
   
   For Each item In colItems
       'aos = item.Caption
       OSVer = item.Version
       GetOSInfo = OSVer
       'abit = item.OSArchitecture
   Next

'   Dim wtext
'   Dim i
'
'   wtext = DoCmd("cmd /c ver")
'   i = instr(wtext, "Version ")
'   if i > 0 then
'       wtext = mid(wtext, i+len("Version "))
'       i = instr(wtext, "]")
'       if i > 0 then
'           aver = trim(left(wtext, i-1))
'       end if
'   End If
   
End Function

' Get SourceForge RSS
Function GetSFRSS(ByRef aurl, apath)
    Dim rCode
    Dim Itemtitle
    Dim i
    Dim wlink
    Dim wver
    Dim wcmd
    Dim wtmpfile

    wlink = aurl
    If InStr(wlink, "?path=") = 0 Then
        If apath = "sakura2" Then wlink = aurl & "?path=/sakura2"
        If apath = "help2" Then wlink = aurl & "?path=/help2"
        If apath = "macro2" Then wlink = aurl & "?path=/help2"
        If apath = "plugin2" Then wlink = aurl & "?path=/help2"
        If apath = "regexp" Then wlink = aurl & "?path=/wiki"
    End If
    
    log "SourceForge確認中... " & wlink, 1

    'wtmpfile = WorkDir & "\_temp.htm"
    'wcmd = CurlExe & " -L """ & wlink & """ -o " & wtmpfile
    'log ">" & wcmd, 1
    ''DoCmd wcmd, ""
    'WSH.Run wcmd, 7, True '
    
    Dim XmlDoc 'As Object
    Set XmlDoc = CreateObject("Microsoft.XMLDOM")
    XmlDoc.async = False
    rCode = XmlDoc.LoadXML(DownloadFile(wlink,""))

    '取得確認
    If (XmlDoc.parseError.ErrorCode <> 0) Then 'ロード失敗
        log "読み込めませんでした。", 0
        log XmlDoc.parseError.reason, 0   'エラー内容を出力
        GetSFRSS = ""
        Exit Function
    End If

    Select Case apath
    Case "sakura2"
        
        Set Itemtitle = XmlDoc.SelectNodes("//item/link")

        wlink = ""
        '
        For i = 0 To Itemtitle.Length - 1
            wlink = Itemtitle(i).Text
            If InStr(wlink, "sakura2-") > 0 And InStr(wlink, ".zip") > 0 Then
                'log wlink, 1
                aurl = wlink
                Exit For
            End If
        Next
        
        If wlink <> "" Then
            Dim re, match, matchs
            Set re = CreateObject("VBScript.RegExp")
            With re
                .Pattern = "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"
                .Global = True
                Set matchs = .Execute(wlink)
                'Debug.Print matchs.Count
                For Each match In matchs
                    'Debug.Print match.Value
                    wver = match.Value
                    log "見つかったファイル:" & wlink, 2
                Next
        End With

        End If

    Case "regexp"
        
        Set Itemtitle = XmlDoc.SelectNodes("//item/link")

        'Dim re, match, matchs
        Set re = CreateObject("VBScript.RegExp")
        re.Pattern = "bron(\d+)\.zip"
        
        wlink = ""
        '
        For i = 0 To Itemtitle.Length - 1
            wlink = Itemtitle(i).Text
            If re.Test(wlink) Then
                log "見つかったファイル:" & wlink, 2
                aurl = wlink
                Exit For
            End If
        Next
        
        If wlink <> "" Then
            With re
                .Global = True
                Set matchs = .Execute(wlink)
                If matchs.Count > 0 Then
                    If matchs(0).SubMatches.Count > 0 Then
                        wver = matchs(0).SubMatches(0)
                        Dim sb
                        Set sb = CreateObject("System.Text.StringBuilder")
                        sb.AppendFormat "{0,0:00}", Left(wver, 1)
                        sb.Append_3 "."
                        sb.AppendFormat "{0,0:00}", Mid(wver, 2)
                        wver = sb.ToString()
                    End If
                End If
            End With
        End If
    
    Case "help2", "macro2", "plugin2"
        Dim items, ItemLink, ItemDate
        Dim j

        'item取得
        Set items = XmlDoc.SelectNodes("//item")

        'Dim re, match, matchs
        Set re = CreateObject("VBScript.RegExp")
        if apath = "help2" Then
            re.Pattern = "([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)/sakura_help[0-9\-]+\.zip"
        elseIf apath = "macro2" Then
            re.Pattern = "([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)/macro[0-9\-]+\.zip"
        elseIf apath = "plugin2" Then
            re.Pattern = "([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)/plugin[0-9\-]+\.zip"
        End If

        wlink = ""
        '
        For i = 0 To items.Length - 1
            Set ItemLink = items(i).SelectNodes("./link")
            Set ItemDate = items(i).SelectNodes("./pubDate")
            wlink = ItemLink(0).Text
            'If re.Test(wlink) Then
            Set matchs = re.Execute(wlink)
            If matchs.Count > 0 Then
                log "見つかったファイル:" & wlink,2 
                aurl = wlink
                
                log "pubDate: " & ItemDate(0).Text, 2
                wver = ItemDate(0).Text
                wver = Replace(wver, " UT", "")
                j = InStr(wver, ",")
                If j > 0 Then wver = Mid(wver, j + 1)
                If IsDate(wver) Then wver = DateValue(wver)
                log "wver: " & wver, 2
                
                'If matchs(0).SubMatches.Count > 0 Then
                '    wver = matchs(0).SubMatches(0)
                '    'if wver = atargetver then
                '    'End If
                'End If
                Exit For
            End If
            wlink = ""
        Next

    End Select

    GetSFRSS = wver

End Function

' Get GetOSDNRSS RSS
Function GetOSDNRSS(ByRef aurl, apath)
    Dim rCode
    Dim ItemFile
    Dim i
    Dim wlink
    Dim wurl
    Dim wver
    Dim wcmd
    Dim wtmpfile

    wlink = aurl
'        If apath = "sakura2" Then wlink = aurl & "?path=/sakura2"
'        If apath = "help2" Then wlink = aurl & "?path=/help2"
'        If apath = "regexp" Then wlink = aurl & "?path=/wiki"
    
    log "OSDN 確認中... " & wlink, 1

    'wtmpfile = WorkDir & "\_temp.htm"
    'wcmd = CurlExe & " -L """ & wlink & """ -o " & wtmpfile
    'log ">" & wcmd, 1
    ''DoCmd wcmd, ""
    'WSH.Run wcmd, 7, True '

    Dim XmlDoc 'As Object
    Set XmlDoc = CreateObject("Microsoft.XMLDOM")
    XmlDoc.async = False
    rCode = XmlDoc.LoadXML(DownloadFile(wlink, ""))

    '取得確認
    If (XmlDoc.parseError.ErrorCode <> 0) Then 'ロード失敗
        log "読み込めませんでした。", 0
        log XmlDoc.parseError.reason, 0   'エラー内容を出力
        GetOSDNRSS = ""
        Exit Function
    End If

    Select Case apath
    Case "sakura2"
        
        Set ItemFile = XmlDoc.SelectNodes("//osdn:file")

        wlink = ""
        
        For i = 0 To ItemFile.Length - 1
            wurl = ItemFile(i).getAttribute("url")
            log wurl, 2
            If InStr(wurl, "sakura2-") > 0 And InStr(wurl, ".zip") > 0 Then
                wlink = wurl
                Exit For
            End If
        Next
        
        If wlink <> "" Then
            Dim re, match, matchs
            Set re = CreateObject("VBScript.RegExp")
            With re
                .Pattern = "[0-9]+-[0-9]+-[0-9]+-[0-9]+"
                .Global = True
                Set matchs = .Execute(wlink)
                'Debug.Print matchs.Count
                For Each match In matchs
                    'Debug.Print match.Value
                    wver = replace(match.Value,"-",".")
                Next
            End With

            log "見つかったファイル:" & wlink, 2
            aurl = wlink

        End If

    Case "help2"

    End Select

    GetOSDNRSS = wver

End Function


' Get GitHub Release API
Function GetGitHub(ByRef aurl)
    Dim req
    Dim wjson
    Dim wlink
    Dim wver
    Dim wpage
    Dim mesg
    Dim i, j, k
    Dim wcmd
    Dim wtmpfile
    Dim re, match, matchs

    wlink = aurl
    log "GitHub確認中.. " & wlink, 1

    'wtmpfile = WorkDir & "\_temp.htm"
    'wcmd = CurlExe & " -L """ & wlink & """ -o " & wtmpfile
    'log ">" & wcmd, 1
    ''DoCmd wcmd, ""
    'WSH.Run wcmd, 7, True '

    'wpage = LoadText(wtmpfile, "utf-8")
    wpage = DownloadFile(wlink, "")

    If Instr(aurl, "sakura") > 0 Then
        mesg = "browser_download_url"":"
        i = InStr(wpage, mesg)
        If i > 0 Then
            wlink = Mid(wpage, i + Len(mesg))
            '    "xxxxxx"
            ' j  1
            ' k         8
            '     2----7  (9-2-3)
            j = InStr(wlink, """")
            If j > 0 Then
                k = InStr(j + 1, wlink, """")
                If k > 0 Then
                    wlink = Mid(wlink, j + 1, k - j - 1)
                    aurl = wlink
                End If
            Else
                wlink = ""
            End If
            log "見つかったファイル:" & wlink, 2
        End If
        
        If wlink <> "" Then
            Set re = CreateObject("VBScript.RegExp")

            With re
                .Pattern = "([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+|v[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9])"
                .Global = True
                Set matchs = .Execute(wlink)
                'Debug.Print matchs.Count
                For Each match In matchs
                    'Debug.Print match.Value
                    wver = match.Value
                Next
            End With
        End If

    ElseIf Instr(aurl, "universal-ctags") > 0 Then
        Set re = CreateObject("VBScript.RegExp")

        With re
            wlink = ""
            
            '.Pattern = "ctags-2018-09-18_3480c6de-x86.zip"
            .Pattern = """browser_download_url"": ?""([^ ""]+ctags-\d+-\d+-\d+_[0-9a-z]+-x86\.zip)"
            .Global = True
            Set matchs = .Execute(wpage)
            If matchs.Count > 0 Then
                If matchs(0).SubMatches.Count > 0 Then
                    wlink = matchs(0).SubMatches(0)
                    log "見つかったファイル:" & wlink, 2
                    aurl = wlink
                End If
            End If
            
            If wlink <> "" Then
                .Pattern = "ctags-(\d+-\d+-\d+)_[0-9a-z]+-x86\.zip"
                .Global = True
                Set matchs = .Execute(wlink)
                If matchs.Count > 0 Then
                    If matchs(0).SubMatches.Count > 0 Then
                        wver = matchs(0).SubMatches(0)
                        wver = replace(wver,"-","/")
                    End If
                End If
            End If
        End With
    End If

    GetGitHub = wver

End Function

' Get BitBucket Release API
Function GetBitBucket(ByRef aurl)
    Dim req
    Dim wjson
    Dim wlink
    Dim wver
    Dim wpage
    Dim mesg
    Dim i, j
    Dim wcmd
    Dim wtmpfile

    wlink = aurl
    log "BitBucket確認中.. " & wlink, 1

    'wtmpfile = WorkDir & "\_temp.htm"
    'wcmd = CurlExe & " -L """ & wlink & """ -o " & wtmpfile
    'log ">" & wcmd, 1
    ''DoCmd wcmd, ""
    'WSH.Run wcmd, 7, True '

    'wpage = LoadText(wtmpfile, "utf-8")
    wpage = DownloadFile(wlink, "")

    'set wjson = ParseJson(req.responseText)
    'wlink = wjson.assets(0).browser_download_url
    'wpage = req.responseText
    'log "Status : " & req.Status, 1
    
    Dim re, match, matchs
    Set re = CreateObject("VBScript.RegExp")
    re.Pattern = "https://[^""]+/bron(\d+)\.zip"

    With re
        .Global = True
        Set matchs = .Execute(wpage)
        If matchs.Count > 0 Then
            wlink = matchs(0)
            log "見つかったファイル:" & wlink, 2
            aurl = wlink
            If matchs(0).SubMatches.Count > 0 Then
                wver = matchs(0).SubMatches(0)
                Dim sb
                Set sb = CreateObject("System.Text.StringBuilder")
                sb.AppendFormat "{0,0:00}", Left(wver, 1)
                sb.Append_3 "."
                sb.AppendFormat "{0,0:00}", Mid(wver, 2)
                wver = sb.ToString()
            End If
        End If
    End With

    GetBitBucket = wver

End Function

'<noscript>
'    <meta http-equiv="refresh" content="5; url=https://downloads.sourceforge.net/project/sakura-editor/sakura2/2.3.2.0/sakura2-3-2-0.zip?r=&amp;ts=1533634137&amp;use_mirror=jaist">
'</noscript>

Function GetSFLink(aurl)
    'Dim wtmpfile
    'Dim wcmd
    
    'wtmpfile = WorkDir & "\_temp2.htm"
    'wcmd = CurlExe & " -L """ & aurl & """ -o " & wtmpfile
    'log ">" & wcmd, 1
    ''DoCmd wcmd, ""
    'WSH.Run wcmd, 7, True '
   
    Dim i
    Dim j
    Dim wpage
    Dim ohtml
    Dim welems
    Dim wattr
    Dim wnode
    Dim wnode1
    Dim wnode2
    Dim mesg
    Dim wlink
    Dim witem
    
'    If req.Status <> 200 Then
'      Exit Function
'    End If
    
    'wpage = req.responseText
    'Dim FS, ts
    'Set FS = CreateObject("Scripting.FileSystemObject")
    'Set ts = FS.OpenTextFile(wtmpfile)
    'wpage = ts.ReadAll
    
    wpage = DownloadFile(aurl, "")

    mesg = "<meta http-equiv=""refresh"" content="""
    i = InStr(wpage, mesg)
    If i > 0 Then
        wlink = Mid(wpage, i + Len(mesg))
        i = InStr(wlink, "url=")
        j = InStr(wlink, """")
        If i > 0 And j > 0 Then
            wlink = Mid(wlink, i + 4, j - i - 4)
            wlink = Replace(wlink, "&amp;", "&")
        Else
            wlink = ""
        End If
    End If
    
    GetSFLink = wlink
    Exit Function
    
    
    Set ohtml = CreateObject("htmlfile") '= MSHTML.HTMLDocument
    ohtml.Write wpage
    
    
    mesg = ""
    wlink = ""
    
    Set welems = ohtml.getElementsByTagName("meta")

    For Each wnode In welems
      wattr = wnode.getAttribute("http-equiv")
      'Debug.Print wnode.Name
      'Debug.Print (wattr)
      'Debug.Print wnode.httpEquiv
      If wattr = "refresh" Or wnode.httpEquiv = "refresh" Then
        mesg = wnode.getAttribute("content")
        If InStr(mesg, "url=") > 0 Then
            wlink = Mid(mesg, InStr(mesg, "url=") + 4)
            wlink = Left(wlink, InStr(wlink, """") - 1)
            Exit For
        End If
        'For Each witem In wnode.ChildNodes
        '    If witem.nodeName = "#text" Then
        '        If Len(witem.NodeValue) > 1 Then
                    'WScript.Echo witem.nodeName & ":(" & Len(witem.firstChild.nodeValue) & ")" & witem.firstChild.nodeValue & ";"
        '            mesg = Trim(witem.NodeValue)
                    'Set wnode = node
                    'Exit For
        '        End If
        '    End If
        'Next
      End If
      'WScript.Echo mesg
      
    Next
    
    GetSFLink = wlink
    
End Function

Function DownloadCURL(aurl, SaveFilePath)
    Dim wtmpfile
    Dim wcmd

    wtmpfile = WorkDir & "\_download.htm"
    If SaveFilePath <> "" Then
        wtmpfile = SaveFilePath
    End If

    If IsExistFile(wtmpfile) Then DeleteFile wtmpfile

    wcmd = CurlExe & " -L """ & aurl & """ -o " & wtmpfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True

    DownloadCURL = LoadText(wtmpfile, "utf-8")
End Function

' @see https://www.ka-net.org/blog/?p=4855#HttpRequest
Function DownloadFile(ByVal aurl, ByVal SaveFilePath)
    On Error Resume Next

    Dim req 'As Object
    Const adTypeBinary = 1
    Const adSaveCreateOverWrite = 2
    
    DownloadFile = ""
    Set req = Nothing '初期化
    Set req = CreateHttpRequest() 'CreateObject("WinHttp.WinHttpRequest.5.1") '
    'Set req = CreateObject("MSXML2.XMLHTTP")
    If req Is Nothing Then
        DownloadFile = DownloadCURL(aurl, SaveFilePath)
        Exit Function
    End If

    log "ダウンロード中... " & aurl, 1
    
    req.Open "GET", aurl, False
     
    '2：SXH_OPTION_IGNORE_SERVER_SSL_CERT_ERROR_FLAGS
    '3：SXH_OPTION_SELECT_CLIENT_SSL_CERT
    '13056: SXH_OPTION_IGNORE_SERVER_SSL_CERT_ERROR_FLAGS
    'req.SetOption 2, 13056
  
    'XMLHTTPRequestを考慮してキャッシュ対策
    'http://vird2002.s8.xrea.com/javascript/XMLHttpRequest.html#XMLHttpRequest_Cache-Control
    'http://www.atmarkit.co.jp/ait/articles/0305/10/news002.html 参考
    req.setRequestHeader "Pragma", "no-cache"
    req.setRequestHeader "Cache-Control", "no-cache"
    req.setRequestHeader "If-Modified-Since", "Thu, 01 Jun 1970 00:00:00 GMT"
     
    req.Send
    
    If err.number <> 0 Then
        log "エラー: " & Err.Description , 1
        DownloadFile = DownloadCURL(aurl, SaveFilePath)
        Exit Function
    End If

    log "ステータスコード：" & req.Status, 2

    Select Case req.Status
      Case 200
        If SaveFilePath <> "" Then
            With CreateObject("ADODB.Stream")
            .Type = adTypeBinary
            .Open
            .Write req.responseBody
            .SaveToFile SaveFilePath, adSaveCreateOverWrite
            .Close
            End With
        End If
        DownloadFile = req.responseText
      Case Else
        log "ステータスエラー：" & req.Status, 1
        DownloadFile = "#ERROR# " & req.Status
    End Select

End Function

'   ヘッダのみ要求してレスポンスコードを返す
Function GetHTTPStatus(ByVal aurl)
    On Error Resume Next

    Dim req 'As Object
    
    GetHTTPStatus = 0
    Set req = Nothing '初期化
    Set req = CreateHttpRequest() 'CreateObject("WinHttp.WinHttpRequest.5.1") '
    
    If req Is Nothing Then
        Exit Function
    End If

    log "HEAD要求中... " & aurl, 1
    
    req.Open "HEAD", aurl, False
     
    req.Send
    
    If err.number <> 0 Then
        log "エラー: " & Err.Description , 0
        Exit Function
    End If

    log "ステータスコード：" & req.Status, 2

    GetHTTPStatus = req.Status

End Function

Function GetRedirectUrl(ByVal url)
    Dim req
    Dim ret
    Const WinHttpRequestOption_EnableRedirects = 6 'WinHttp.WinHttpRequestOption
    ret = url
    
    log "リダイレクトチェック " & url, 1
    
    On Error Resume Next
    Err.Clear
    Set req = CreateObject("WinHttp.WinHttpRequest.5.1")
  
    If req Is Nothing Then
        log "GetRedirectUrl(0): WinHttpRequestオブジェクト初期化失敗", 1
        Exit Function
    Else
        log "GetRedirectUrl(0): WinHttpRequestオブジェクト初期化成功", 1
    End If
    
    With req
       If Err.Number <> 0 Then log "GetRedirectUrl(1): Error " & Error, 0: Exit Function
      .Open "HEAD", url, False
       If Err.Number <> 0 Then log "GetRedirectUrl(2): Error " & Error, 0: Exit Function
      .Option(WinHttpRequestOption_EnableRedirects) = False 'リダイレクト無効
       If Err.Number <> 0 Then log "GetRedirectUrl(3): Error " & Error, 0: Exit Function
      .Send
       If Err.Number <> 0 Then log "GetRedirectUrl(4): Error " & Error, 0: Exit Function
      log "GetRedirectUrl(5): Status " & .Status, 1
      Select Case .Status
        Case 302: ret = .GetResponseHeader("Location")
      End Select
    End With
  
    On Error GoTo 0
    GetRedirectUrl = ret
End Function

'   更新チェック
'   amode = 1:自動モード,  2:手動モード
Sub UpdateCheck(amode)

    Dim lastcheck
    Dim checkfreq
    lastcheck = Plugin.GetOption("サクラエディタ", "LASTCHECK")
    checkfreq = Plugin.GetOption("サクラエディタ", "CHECKFREQ")
    
    If amode = 1 Then
        If Not IsNumeric(checkfreq) Then
            Exit Sub
        End If
        
        If IsDate(lastcheck) Then
            If DateAdd("d", checkfreq, lastcheck) > Date Then
                Exit Sub
            End If
        End If
    End If

    lastcheck = Date
    Plugin.SetOption "サクラエディタ", "LASTCHECK", lastcheck
    
    Dim wurl
    Dim wnewver
    Dim wchk0
    Dim wchk1
    Dim wchk2
    Dim wchk3
    Dim wchk4
    Dim wtargets
    
    wtargets = Array("")
    
    If amode = 2 Then Editor.ActivateWinOutput
    If amode = 2 Then log vbCrLf & "★★sakuraupdate " & Version & "★★", 0

    If amode = 2 Then log vbCrLf & "プラグインの最新バージョンを確認します。", 0
    wchk0 = PluginCheck(amode, wnewver, wurl)
    If wchk0 = true Then
        If amode = 2 Then
            If PluginDownload(wurl) = true Then
                Call PluginSetup("plugin")
            End If
        End If
        Exit Sub
    End If

    If amode = 2 Then log vbCrLf & "サクラエディタ本体の最新バージョンを確認します。", 0
    wchk1 = SakuraCheck(amode, wnewver, wurl)
    If wchk1 = true and amode = 2 Then
        If SakuraDownload(wurl) = True Then
            redim preserve wtargets(ubound(wtargets)+1)
            wtargets(ubound(wtargets)) = "sakura.exe"
        End If
    End If

    If Plugin.GetOption("サクラエディタ", "HELPURL") <> "" Then
        If amode = 2 Then log vbCrLf & "ヘルプファイルの最新バージョンを確認します。", 0
        wchk2 = HelpCheck(amode, "sakura.chm", wnewver, wurl)
        If wchk2 = true and amode = 2 Then
            If HelpDownload("sakura.chm", wurl) = true Then
                redim preserve wtargets(ubound(wtargets)+1)
                wtargets(ubound(wtargets)) = "sakura.chm"
            End If
        End If
        wchk2 = HelpCheck(amode, "macro.chm", wnewver, wurl)
        If wchk2 = true and amode = 2 Then
            If HelpDownload("macro.chm", wurl) = true Then
                redim preserve wtargets(ubound(wtargets)+1)
                wtargets(ubound(wtargets)) = "macro.chm"
            End If
        End If
        wchk2 = HelpCheck(amode, "plugin.chm", wnewver, wurl)
        If wchk2 = true and amode = 2 Then
            If HelpDownload("plugin.chm", wurl) = true Then
                redim preserve wtargets(ubound(wtargets)+1)
                wtargets(ubound(wtargets)) = "plugin.chm"
            End If
        End If
    End If
    
    If Plugin.GetOption("サクラエディタ", "REGEXPURL") <> "" Then
        If amode = 2 Then log vbCrLf & "正規表現ライブラリの最新バージョンを確認します。", 0
        wchk3 = RegExpCheck(amode, wnewver, wurl)
        If wchk3 = true and amode = 2 Then
            If RegExpDownload(wurl) = true Then
                redim preserve wtargets(ubound(wtargets)+1)
                wtargets(ubound(wtargets)) = "bregonig.dll"
            End If
        End If
    End If
    
    If Plugin.GetOption("サクラエディタ", "DIFFURL") <> "" Then
        If amode = 2 Then log vbCrLf & "Diff(差分)ツールの最新バージョンを確認します。", 0
        wchk4 = DiffCheck(amode, wnewver, wurl)
        If wchk4 = true and amode = 2 Then
            If DiffDownload(wurl) = True Then
                redim preserve wtargets(ubound(wtargets)+1)
                wtargets(ubound(wtargets)) = "diff.exe"
            End If
        End If
    End If
    
    If Plugin.GetOption("サクラエディタ", "CTAGSURL") <> "" Then
        If amode = 2 Then log vbCrLf & "Ctags(タグ生成)ツールの最新バージョンを確認します。", 0
        wchk4 = CtagsCheck(amode, wnewver, wurl)
        If wchk4 = true and amode = 2 Then
            If CtagsDownload(wurl) = true Then
                redim preserve wtargets(ubound(wtargets)+1)
                wtargets(ubound(wtargets)) = "ctags.exe"
            End If
        End If
    End If

    if ubound(wtargets) > 0 Then
        Call FileSetup(wtargets)
    End If

End Sub


'   サクラエディタ本体の更新チェック
'   amode = 1:自動モード,  2:手動モード
'   戻り値: true=更新あり false=更新なし
'
Function SakuraCheck(amode, ByRef aver, ByRef aurl)

    'Dim wurl
    Dim wlink
    Dim wcurver
    wcurver = Editor.ExpandParameter("$V")

    If amode = 2 Then log "現在のサクラエディタのバージョン:" & wcurver, 0
    
    Select Case Plugin.GetOption("サクラエディタ", "SITEPRIORITY")
    Case "0"
        aurl = Plugin.GetOption("サクラエディタ", "GITHUBURL")
    Case "1"
        aurl = Plugin.GetOption("サクラエディタ", "SFRSSURL")
    Case "2"
        aurl = Plugin.GetOption("サクラエディタ", "OSDNURL")
    Case "3"
        aurl = Plugin.GetOption("サクラエディタ", "CUSTOMURL")
    End Select

    If InStr(aurl, "sourceforge.net") > 0 Then
        aver = GetSFRSS(aurl, "sakura2")
    ElseIf InStr(aurl, "github.com") > 0 Then
        aver = GetGitHub(aurl)
    ElseIf InStr(aurl, "osdn.net") > 0 Then
        aver = GetOSDNRSS(aurl, "sakura2")
    End If

    If aver = "" Then
        If amode = 2 Then log "×最新版を確認できませんでした。", 0
        SakuraCheck = Null
        Exit Function
    End If
    
    If amode = 2 Then log "最新のサクラエディタのバージョン:" & aver, 0

    If aver <= wcurver Then
        If amode = 2 Then log "●サクラエディタは最新バージョンです。", 0
        SakuraCheck = False
        Exit Function
    End If

    log "★サクラエディタの新バージョンがリリースされています。", 0
    
    SakuraCheck = True

End Function

' サクラエディタのzipダウンロード

Function SakuraDownload(wurl)

    Dim wlink
    Dim wcmd
    Dim wzipfile
    
    wzipfile = WorkDir & "\sakura.zip"
    
    wlink = wurl
    'If InStr(wurl, "sourceforge.net") > 0 Then
    '    wlink = wurl
        'log "ダウンロードリンクを確認します。", 1
        'wlink = GetSFLink(wurl)
        'if wlink = "" then
        '    log "ダウンロードリンクを取得できませんでした。", 1
        '    exit sub
        'End If
    'ElseIf InStr(wurl, "github.com") > 0 Then
    '    wlink = wurl
    'End If
    
    log "サクラエディタをダウンロードします.. " & wlink, 0
    
    'wcmd = "bitsadmin.exe /TRANSFER sakura2 " & wurl & " " & wzipfile
    wcmd = CurlExe & " -L """ & wlink & """ -o " & wzipfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True '

    If Not FS.FileExists(wzipfile) Then
        log "ダウンロードできませんでした。", 0
        SakuraDownload = False
        Exit Function
    End If
    
    log "ダウンロードファイルを展開します。", 0
    
    'zip展開
    'wcmd = UnzipExe & " -o -j " & wzipfile & " */sakura.exe -d " & WorkDir
    wcmd = UnzipExe & " e -aoa " & wzipfile & " */sakura.exe -o" & WorkDir
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, False
    
on error resume next
    Editor.Sleep 500
on error goto 0

    If Not FS.FileExists(WorkDir & "\sakura.exe") Then
        log WorkDir & "\sakura.exeがダウンロードファイルにありませんでした。", 0
        SakuraDownload = False
        Exit Function
    End If

    'Editor.ExitAll
    SakuraDownload = True

End Function

'   正規表現ライブラリの更新チェック
'   amode = 1:自動モード,  2:手動モード
'   戻り値: true=更新あり false=更新なし
'
Function RegExpCheck(amode, ByRef aver, ByRef aurl)

    'Editor.ActivateWinOutput

    Dim wurl
    Dim wlink
    Dim wsakurapath
    Dim wregexppath
    Dim wcurver
    
    wcurver = ""
    wsakurapath = Editor.ExpandParameter("$S")
on error resume next
    wregexppath = FS.GetParentFolderName(wsakurapath) & "\bregonig.dll"
    wcurver = FS.GetFileVersion(wregexppath)
on error goto 0
    Dim re, match, matchs
    Set re = CreateObject("VBScript.RegExp")
    
    With re
        .Pattern = "(\d+)\.(\d+)\.\d+\.\d+"
        .Global = True
        Set matchs = .Execute(wcurver)
        If matchs.Count > 0 Then
            If matchs(0).SubMatches.Count > 1 Then
                Dim sb
                Set sb = CreateObject("System.Text.StringBuilder")
                sb.AppendFormat "{0,0:00}", matchs(0).SubMatches(0)
                sb.Append_3 "."
                sb.AppendFormat "{0,0:00}", matchs(0).SubMatches(1)
                wcurver = sb.ToString()
            End If
        End If
    End With
    
    If amode = 2 Then log "現在の正規表現ライブラリのバージョン:" & wcurver, 0

    wurl = Plugin.GetOption("サクラエディタ", "REGEXPURL")

    If InStr(wurl, "sourceforge.net") > 0 Then
        aver = GetSFRSS(wurl, "regexp")
    ElseIf InStr(wurl, "api.bitbucket.org") > 0 Then
        aver = GetBitBucket(wurl)
    ElseIf wurl = "" Then '指定なしの場合は、SourceForgeから検索
        wurl = Plugin.GetOption("サクラエディタ", "SFRSSURL")
        aver = GetSFRSS(wurl, "regexp")
    End If
    
    If aver = "" Then
        If amode = 2 Then log "×最新版を確認できませんでした。", 0
        RegExpCheck = Null
        Exit Function
    End If
    
    aurl = wurl
    
    If amode = 2 Then log "最新の正規表現ライブラリのバージョン:" & aver, 0

    If aver <= wcurver Then
        If amode = 2 Then log "●正規表現ライブラリは最新バージョンです。", 0
        RegExpCheck = False
        Exit Function
    End If

    log "★正規表現ライブラリの新バージョンがリリースされています。", 0
    
    RegExpCheck = True

End Function

' 正規表現ライブラリのzipダウンロード

Function RegExpDownload(wurl)
    
    Dim wlink
    Dim wcmd
    Dim wzipfile
    
    wzipfile = WorkDir & "\regexp.zip"
    
    If InStr(wurl, "sourceforge.net") > 0 Then
        wlink = wurl
        'If DebugLvl > 0 Then log "ダウンロードリンクを確認します。"
        'wlink = GetSFLink(wurl)
        'if wlink = "" then
        '    If DebugLvl > 0 Then log "ダウンロードリンクを取得できませんでした。"
        '    exit Function
        'End If
    ElseIf InStr(wurl, "bitbucket.org") > 0 Then
        wlink = wurl
    End If
    
    log "正規表現ライブラリをダウンロードします.. " & wlink, 0

    'wcmd = "bitsadmin.exe /TRANSFER sakura2 " & wurl & " " & wzipfile
    wcmd = CurlExe & " -L """ & wlink & """ -o " & wzipfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True '

    If Not IsExistFile(wzipfile) Then
        log "ダウンロードできませんでした。", 0
        RegExpDownload = False
        Exit Function
    End If
    
    log "ダウンロードファイルを展開します。", 1

    'zip展開
    wcmd = UnzipExe & " e -aoa " & wzipfile & " bregonig.dll -o" & WorkDir
    log ">" & wcmd, 1
    WSH.Run wcmd, 7, False

on error resume next
    Editor.Sleep 500
on error goto 0

    If Not IsExistFile(WorkDir & "\bregonig.dll") Then
        log "bregonig.dllがダウンロードファイルにありませんでした。", 0
        RegExpDownload = False
        Exit Function
    End If

    RegExpDownload = True

End Function

'   ヘルプファイルの更新チェック
'   amode = 1:自動モード,  2:手動モード
'   atarget = "sakura.chm", "macro.chm", "plugin.chm"
'   戻り値: true=更新あり false=更新なし
'
Function HelpCheck(amode, atarget, ByRef aver, ByRef aurl)

    'Editor.ActivateWinOutput

    Dim wurl
    Dim wlink
    Dim wsakurapath
    Dim whelppath
    Dim wcurdate
    Dim wsakuraver
    Dim wpath

    wcurdate = ""
    wsakurapath = Editor.ExpandParameter("$S")
    on error resume next
    whelppath = FS.GetParentFolderName(wsakurapath) & "\" & atarget
    wcurdate = DateValue(FS.GetFile(whelppath).DateLastModified)
    on error goto 0

    'If amode = 2 Then log "現在のサクラエディタのバージョン:" & wsakuraver, 0
    If amode = 2 Then log "現在の" & atarget & "ヘルプファイル更新日付:" & wcurdate, 0

    wsakuraver = Editor.ExpandParameter("$V")
    wurl = Plugin.GetOption("サクラエディタ", "HELPURL")
    aver = ""

    if atarget = "sakura.chm" then wpath = "help2"
    if atarget = "macro.chm" then wpath = "macro2"
    if atarget = "plugin.chm" then wpath = "plugin2"

    If InStr(wurl, "sourceforge.net") > 0 Then
        aver = GetSFRSS(wurl, wpath)
    ElseIf wurl = "" Then '指定なしの場合は、SourceForgeから検索
        wurl = Plugin.GetOption("サクラエディタ", "SFRSSURL")
        aver = GetSFRSS(wurl, wpath)
    End If
    
    If aver = "" Then
        If amode = 2 Then log "×最新版を確認できませんでした。", 0
        HelpCheck = Null
        Exit Function
    End If
    
    aurl = wurl
    
    'If amode = 2 Then log "最新のヘルプファイルバージョン:" & wnewver, 0
    If amode = 2 Then log "最新の" & atarget & "ヘルプファイル発行日付:" & aver, 0

    If IsDate(wcurdate) and IsDate(aver) Then
        If amode = 2 Then log "発行日付と更新日付の日数差: " & DateDiff("d", wcurdate, aver), 1
        If DateDiff("d", wcurdate, aver) < 7 Then
            If amode = 2 Then log "●" & atarget & "ヘルプファイルは最新バージョンです。", 0
            HelpCheck = False
            Exit Function
        End If
    End If

    log "★" & atarget & "ヘルプファイルの新バージョンがリリースされています。", 0
    
    HelpCheck = True
End Function

' ヘルプファイルのzipダウンロード
Function HelpDownload(atarget, wurl)
    
    Dim wlink
    Dim wcmd
    Dim wzipfile
    
    wzipfile = WorkDir & "\help.zip"
    
    If InStr(wurl, "sourceforge.net") > 0 Then
        wlink = wurl
    End If
    
    log "ヘルプファイルをダウンロードします.. " & wlink, 0

    'wcmd = "bitsadmin.exe /TRANSFER sakura2 " & wurl & " " & wzipfile
    wcmd = CurlExe & " -L """ & wlink & """ -o " & wzipfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True '

    If Not IsExistFile(wzipfile) Then
        log "ダウンロードできませんでした。", 0
        HelpDownload = False
        Exit Function
    End If
    
    log "ダウンロードファイルを展開します。", 0

    'zip展開
    wcmd = UnzipExe & " e -aoa " & wzipfile & " " & atarget & " -o" & WorkDir
    log ">" & wcmd, 1
    WSH.Run wcmd, 7, False

on error resume next
    Editor.Sleep 500
on error goto 0

    If Not IsExistFile(WorkDir & "\" & atarget) Then
        log atarget & "がダウンロードファイルにありませんでした。", 0
        HelpDownload = False
        Exit Function
    End If

    HelpDownload = True

End Function



'   Diff(差分)ツールの更新チェック
'   amode = 1:自動モード,  2:手動モード
'   戻り値: true=更新あり false=更新なし
'
Function DiffCheck(amode, ByRef aver, ByRef aurl)

    'Editor.ActivateWinOutput

    Dim wurl
    Dim wlink
    Dim wsakurapath
    Dim wdiffpath
    Dim wcurdate
    
    wsakurapath = Editor.ExpandParameter("$S")
    wcurdate = ""
on error resume next
    wdiffpath = FS.GetParentFolderName(wsakurapath) & "\diff.exe"
    wcurdate = DateValue(FS.GetFile(wdiffpath).DateLastModified)
on error goto 0

    If wcurdate = "" Then
        If amode = 2 Then log "現在、Diff(差分)ツールは配置されていません。", 0
    Else
        If amode = 2 Then log "現在のDiff(差分)ツールの更新日付:" & wcurdate, 0
    End If

    aurl = Plugin.GetOption("サクラエディタ", "DIFFURL")
    aver = ""

    if aurl = "" Then
        DiffCheck = Null
        Exit Function
    End If
    
    Dim wtmpfile
    Dim wcmd
    Dim whead
    
    whead = GetHTTPStatus(aurl)
    if whead = 0 Then
        wtmpfile = WorkDir & "\_temp.htm"
        DeleteFile(wtmpfile)
        'curl --head  -s -w "HTTPCODE=%{http_code}"
        wcmd = CurlExe & " --head -s -L """ & aurl & """ -o " & wtmpfile
        If amode = 2 Then log ">" & wcmd, 1
        WSH.Run wcmd, 7, True '
        whead = LoadText(wtmpfile, "utf-8")
        
        log "ステータスコード: " & left(whead,10), 2
        
        If instr(whead, "200 OK") > 0 Then
            whead = 200
        ElseIf IsNumeric(left(whead,3)) Then
            whead = CLng(left(whead,3))
        Else
            whead = 0
        End If
    End If
    
    If whead = 200 Then
        aver = "any date"
    Else
        If amode = 2 Then log "×最新版を確認できませんでした。", 0
        DiffCheck = Null
        Exit Function
    End If
    
    If wcurdate <> "" Then
        If amode = 2 Then log "●Diff(差分)ツールは配置済みです。", 0
        DiffCheck = False
        Exit Function
    End If

    log "★Diff(差分)ツールがダウンロード可能です。", 0
    
    DiffCheck = True

End Function

' Diff(差分)ツールのzipダウンロード

Function DiffDownload(wurl)
    
    Dim wlink
    Dim wcmd
    Dim wzipfile
    
    wzipfile = WorkDir & "\Diff.zip"
    
    wlink = wurl
    
    log "Diff(差分)ツールをダウンロードします.. " & wlink, 0

    'wcmd = "bitsadmin.exe /TRANSFER sakura2 " & wurl & " " & wzipfile
    wcmd = CurlExe & " -L """ & wlink & """ -o " & wzipfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True '

    If Not IsExistFile(wzipfile) Then
        log "ダウンロードできませんでした。", 0
        DiffDownload = False
        Exit Function
    End If
    
    log "ダウンロードファイルを展開します。", 1

    'zip展開
    wcmd = UnzipExe & " e -aoa " & wzipfile & " diff.exe -o" & WorkDir
    log ">" & wcmd, 1
    WSH.Run wcmd, 7, False

on error resume next
    Editor.Sleep 500
on error goto 0

    If Not IsExistFile(WorkDir & "\diff.exe") Then
        log "diff.exeがダウンロードファイルにありませんでした。", 0
        DiffDownload = False
        Exit Function
    End If

    DiffDownload = True

End Function

'   Ctags(タグ生成)ツールの更新チェック
'   amode = 1:自動モード,  2:手動モード
'   戻り値: true=更新あり false=更新なし
'
Function CtagsCheck(amode, ByRef aver, ByRef aurl)

    CtagsCheck = Null

    Dim wurl
    Dim wlink
    Dim wsakurapath
    Dim wctagspath
    Dim wcurdate
    
    wsakurapath = Editor.ExpandParameter("$S")
    wcurdate = ""
on error resume next
    wctagspath = FS.GetParentFolderName(wsakurapath) & "\ctags.exe"
    wcurdate = DateValue(FS.GetFile(wctagspath).DateLastModified)
on error goto 0

    If wcurdate = "" Then
        If amode = 2 Then log "現在、Ctags(タグ生成)ツールは配置されていません。", 0
    Else
        If amode = 2 Then log "現在のCtags(タグ生成)ツールの更新日付:" & wcurdate, 0
        If amode = 1 Then
            CtagsCheck = False
            Exit Function
        End If
    End If

    aurl = Plugin.GetOption("サクラエディタ", "CTAGSURL")
    aver = ""

    if aurl = "" Then
        Exit Function
    End If
    
    Dim wpage
    
    If instr(aurl, "hp.vector.co.jp/authors/VA025040/ctags") > 0 Then
        wpage = DownloadFile(aurl, "")
        If wpage = "" or Left(wpage,7) = "#ERROR#" Then
            ' nop
        Else
            Dim re, match, matchs
            Set re = CreateObject("VBScript.RegExp")
            re.Pattern = "downloads/ec(\d+j\d)w32bin\.zip"
            'a href="downloads/ec58j2w32bin.zip

            With re
                .Global = True
                Set matchs = .Execute(wpage)
                If matchs.Count > 0 Then
                    wlink = matchs(0)
                    log "見つかったファイル:" & wlink, 2
                    aurl = aurl & wlink
                    If matchs(0).SubMatches.Count > 0 Then
                        aver = matchs(0).SubMatches(0)
                    End If
                End If
            End With
        End If
    ElseIf instr(aurl, "github.com") > 0 Then
        aver = GetGitHub(aurl)
    End If

    If aver = "" Then
        If amode = 2 Then log "×最新版を確認できませんでした。", 0
        CtagsCheck = Null
        Exit Function
    else
        If amode = 2 Then log "最新のCtags(タグ生成)ツールのバージョン:" & aver, 0
    End If
    
    If wcurdate <> "" Then
        If amode = 2 Then log "●Ctags(タグ生成)ツールは配置済みです。", 0
        CtagsCheck = False
        Exit Function
    End If

    log "★Ctags(タグ生成)ツールがダウンロード可能です。", 0
    
    CtagsCheck = True

End Function

' Ctags(タグ生成)ツールのzipダウンロード

Function CtagsDownload(wurl)
    
    Dim wlink
    Dim wcmd
    Dim wzipfile
    
    wzipfile = WorkDir & "\Ctags.zip"
    
    wlink = wurl
    
    log "Ctags(タグ生成)ツールをダウンロードします.. " & wlink, 0

    'wcmd = "bitsadmin.exe /TRANSFER sakura2 " & wurl & " " & wzipfile
    wcmd = CurlExe & " -L """ & wlink & """ -o " & wzipfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True '

    If Not IsExistFile(wzipfile) Then
        log "ダウンロードできませんでした。", 0
        CtagsDownload = False
        Exit Function
    End If
    
    log "ダウンロードファイルを展開します。", 1

    'zip展開
    wcmd = UnzipExe & " e -aoa " & wzipfile & " -o" & WorkDir
    log ">" & wcmd, 1
    WSH.Run wcmd, 7, False

on error resume next
    Editor.Sleep 500
on error goto 0

    If Not IsExistFile(WorkDir & "\ctags.exe") Then
        log "ctags.exeがダウンロードファイルにありませんでした。", 0
        CtagsDownload = False
        Exit Function
    End If

    CtagsDownload = True

End Function


'   プラグインファイルの更新チェック
'   amode = 1:自動モード,  2:手動モード
'   戻り値: true=更新あり false=更新なし
'
Function PluginCheck(amode, ByRef aver, ByRef aurl)

    'Editor.ActivateWinOutput

    Dim wpluginpath
    Dim wdefpath
    Dim wdeftext
    Dim wcurver
    Dim wsakuraver
    
    wpluginpath = PluginDir
    wdefpath = wpluginpath & "\plugin.def"
    
    wdeftext = LoadText(wdefpath, "")

    Dim re, match, matchs
    Set re = CreateObject("VBScript.RegExp")

    With re

        re.Pattern = "Version=(v\d+)"
        '.Global = True
        Set matchs = .Execute(wdeftext)
        If matchs.Count > 0 Then
            If matchs(0).SubMatches.Count > 0 Then
                wcurver = matchs(0).SubMatches(0)
            End If
        End If

    End With

    If amode = 2 Then log "現在のプラグインのバージョン:" & wcurver, 0

    aurl = Plugin.GetOption("サクラエディタ", "PLUGINURL")
    aver = GetGitHub(aurl)

    If aver = "" Then
        If amode = 2 Then log "×最新版を確認できませんでした。", 0
        PluginCheck = Null
        Exit Function
    End If
    
    If amode = 2 Then log "最新のプラグインのバージョン:" & aver, 0

    If aver <= wcurver Then
        If amode = 2 Then log "●プラグインは最新バージョンです。", 0
        PluginCheck = False
        Exit Function
    End If

    log "★プラグインの新バージョンがリリースされています。", 0
    
    PluginCheck = True
End Function

' プラグインのzipダウンロード
Function PluginDownload(wurl)
    
    Dim wlink
    Dim wcmd
    Dim wzipfile
    
    wzipfile = WorkDir & "\Plugin.zip"
    
    wlink = wurl
    
    log "プラグインをダウンロードします.. " & wlink, 0

    'wcmd = "bitsadmin.exe /TRANSFER sakura2 " & wurl & " " & wzipfile
    wcmd = CurlExe & " -L """ & wlink & """ -o " & wzipfile
    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 7, True '

    If Not IsExistFile(wzipfile) Then
        log "ダウンロードできませんでした。", 0
        PluginDownload = False
        Exit Function
    End If
    
    log "ダウンロードファイルを展開します。", 0

    'zip展開
    'CreateDir(WorkDir & "\plugin")
    wcmd = UnzipExe & " x -aoa " & wzipfile & " -o" & WorkDir
    log ">" & wcmd, 1
    WSH.Run wcmd, 7, False

on error resume next
    Editor.Sleep 500
on error goto 0

    If Not IsExistFile(WorkDir & "\sakuraupdate\plugin.def") Then
        log "プラグインzipではありませんでした。", 0
        PluginDownload = False
        Exit Function
    End If

    PluginDownload = True

End Function

'   pluginのファイルをインストールフォルダへコピーする。
'	
Sub PluginSetup(atarget)

    log "プラグインを更新します。", 1
    If WSH.Popup("プラグインを更新します。" & vbCrLf & "注意！更新前にサクラエディタは強制終了します。編集中のファイルがある場合は破棄されます。", 0, "ソフトウェアの更新", 1) = 2 Then
        Exit Sub
    End If
    
    ' exe上書き処理
    '    更新スクリプトを作成し、他プロセスで実行
    '    実行後サクラエディタを終了する。
    '    スクリプトは、サクラエディタ上書きが出来るまで待機する。
    '    program files\sakuraの場合はセキュリティ警告がでる。
    Dim wcmd
    Dim wcmdfile
    Dim wcmdparam
    Dim programfiles
    programfiles = "C:\Program Files"
    
    wcmd = "set srcfolder=" & WorkDir & "\sakuraupdate" & vbLf & _
               "set sakurafolder=" & SakuraDir & vbLf & _
               "set targetfolder=" & PluginDir & vbLf & _
               "set targetfile1=" & atarget & vbLf

    If (Left(OSVer, 2) = "6." Or Left(OSVer, 3) = "10.") And Left(PluginDir, Len(programfiles)) = programfiles Then
        wcmd = wcmd & "set _runas=-Verb runas"
    End If
    
    wcmdfile = WorkDir & "\_setenv.bat"
    SaveText wcmd, wcmdfile, "Shift_JIS"

    'mainupdate.batとfileupdate.batの退避
    FS.CopyFile PluginDir & "\sleep.vbs",      WorkDir & "\", true
    FS.CopyFile PluginDir & "\mainupdate.bat", WorkDir & "\", true
    FS.CopyFile PluginDir & "\fileupdate.bat", WorkDir & "\", true

    wcmd = """" & WorkDir & "\mainupdate.bat"""

    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 1, False

    log "プラグインの更新処理を終了しました。", 0

End Sub

'   %temp%\sakuraupdate内の指定ファイルをインストールフォルダへコピーする。
'	atargets = 指定ファイルの配列(1～)

Sub FileSetup(atargets)
    Dim i
    Dim wfilelist
    Dim wrestart
    
    wfilelist = ""
    wrestart = ""
    for i = 1 to ubound(atargets)
        wfilelist = wfilelist & "," & atargets(i)
        if atargets(i) = "sakura.exe" Then
            wrestart = vbCrLf & "注意！更新前にサクラエディタは強制終了します。編集中のファイルがある場合は破棄されます。"
        End If
    next

    log vbCrLf & mid(wfilelist,2) & "を更新します。" & wrestart, 0
    
    If WSH.Popup(mid(wfilelist,2) & "を更新します。" & wrestart, 0, "ソフトウェアの更新", 1) = 2 Then
        Exit Sub
    End If
    
    ' exe上書き処理
    '    更新スクリプトを作成し、他プロセスで実行
    '    実行後サクラエディタを終了する。
    '    スクリプトは、サクラエディタ上書きが出来るまで待機する。
    '    program files\sakuraの場合はセキュリティ警告がでる。
    Dim wcmd
    Dim wcmdfile
    Dim wcmdparam
    Dim programfiles
    programfiles = "C:\Program Files"
    
    wcmd = "set srcfolder=" & WorkDir & vbLf & _
               "set sakurafolder=" & SakuraDir & vbLf & _
               "set targetfolder=" & SakuraDir & vbLf
    
    for i = 1 to ubound(atargets)
        wcmd = wcmd & "set targetfile" & i & "=" & atargets(i) & vbLf
    next

    If (Left(OSVer, 2) = "6." Or Left(OSVer, 3) = "10.") And Left(SakuraDir, Len(programfiles)) = programfiles Then
        wcmd = wcmd & "set _runas=-Verb runas"
    End If
    
    wcmdfile = WorkDir & "\_setenv.bat"
    SaveText wcmd, wcmdfile, "Shift_JIS"

    'mainupdate.batとfileupdate.batの退避
    'FS.CopyFile PluginDir & "\sleep.vbs",      WorkDir & "\", true
    'FS.CopyFile PluginDir & "\mainupdate.bat", WorkDir & "\", true
    'FS.CopyFile PluginDir & "\fileupdate.bat", WorkDir & "\", true

    wcmd = """" & PluginDir & "\mainupdate.bat"""

    log ">" & wcmd, 1
    'DoCmd wcmd, ""
    WSH.Run wcmd, 1, False

    log "更新処理を終了しました。", 0

End Sub

]]>
</script>
</component>
